name: Terragrunt AWS Execute
description: "Authenticates to AWS then invokes terragrunt"
inputs:
  gruntwork_code_access_token:
    description: "The GRUNTWORK_CODE_ACCESS_TOKEN secret"
    required: true
  terragrunt_command:
    description: "The name of the configured deploy branch"
    required: false
    default: main
  working_directory:
    description: ""
    required: true
  aws_region:
    description: ""
    required: true
  account_id:
    description: ""
    required: true
  account_role_name:
    description: ""
    required: true
  role_session_name:
    description: ""
    required: true
  chain_account_id:
    description: ""
    required: false
  chain_account_role_name:
    description: ""
    required: false
  branch:
    description: ""
    required: true
  tofu_version:
    description: ""
    required: true
  terragrunt_version:
    description: ""
    required: true
  gruntwork_config_file:
    description: ""
    required: true
  pipelines_cli_version:
    description: ""
    required: true
runs:
  using: composite
  steps:
    - name: Authenticate to AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: "arn:aws:iam::${{ inputs.account_id }}:role/${{ inputs.account_role_name }}"
        role-duration-seconds: 3600
        role-session-name: ${{ inputs.role_session_name }}

    # If we're doing a pipelines policy update, assume the role in the child account from the mgmt account
    - name: "[Terragrunt Execute] Authenticate to Chained AWS account"
      if: ${{ inputs.chain_account_id != '' }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: "arn:aws:iam::${{ inputs.chain_account_id }}:role/${{ inputs.chain_acct_role_name }}"
        role-duration-seconds: 3600
        role-session-name: ${{ inputs.role_session_name }}
        role-chaining: true

    - name: "[Terragrunt Execute] Confirm Account Access"
      shell: bash
      env:
        ACCOUNT: ${{ inputs.account_id }}
        WORKING_DIRECTORY: ${{ inputs.working_directory }}
      run: echo "::notice ::Running in account $ACCOUNT and planning in $WORKING_DIRECTORY"

    - name: "[Terragrunt Execute] Run terragrunt ${{ inputs.terragrunt_command }} in ${{ inputs.working_directory }}"
      id: terragrunt
      uses: gruntwork-io/pipelines-execute@v3.0.0-beta2
      with:
        token: ${{ inputs.gruntwork_code_access_token }}
        working_directory: ${{ inputs.working_directory }}
        tf_version: ${{ inputs.tofu_version }}
        tg_version: ${{ inputs.terragrunt_version }}
        pipelines_cli_version: ${{ inputs.pipelines_cli_version }}
        terragrunt_command: ${{ inputs.terragrunt_command }}
        infra_live_repo_branch: ${{ inputs.branch }}
        gruntwork_config_file: "${{ inputs.gruntwork_config_file }}"
        infra_live_repo: "."
        infra_live_directory: "."
